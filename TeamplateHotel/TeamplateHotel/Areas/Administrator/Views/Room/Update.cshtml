@using ProjectLibrary.Config
@using TeamplateHotel.Areas.Administrator.EntityModel
@model ERoom
@{
    Layout = "~/Areas/Administrator/Views/Templates/_LayoutPage.cshtml";
    int flag = 0;
}
<link href="https://cdn.jsdelivr.net/npm/select2@4.0.12/dist/css/select2.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/select2@4.0.12/dist/js/select2.min.js"></script>

<style>
    input.select2-search__field {
        height: 25px !important;
    }
</style>
<div class="span12">
    <div class="widget ">
        <div class="widget-header">
            <i class=" icon-plus-sign"></i>
            <h3>@ViewBag.Title</h3>
        </div> <!-- /widget-header -->

        <div class="widget-content">
            @Html.ValidationSummary(true)
            @using (Html.BeginForm("Update", "Room", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.HiddenFor(a => a.ID)

                <div class="control-group" id="listHotel">
                    @Html.LabelFor(c => c.HotelId, new { @class = "control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(p => p.HotelId, new SelectList(ViewBag.ListHotel, "Value", "Text"), new { @class = "span4 js-example-basic-single" })
                        @Html.ValidationMessageFor(p => p.HotelId)
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(c => c.Title, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(c => c.Title, new { @class = "span4" })
                        @Html.ValidationMessageFor(c => c.Title)
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(c => c.Image, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(c => c.Image, new { @class = "span4 inputbox upload" })
                        @Html.ValidationMessageFor(c => c.Image)
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(c => c.MaxPeople, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(c => c.MaxPeople, new { @class = "span1" })
                        @Html.ValidationMessageFor(c => c.MaxPeople)
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(c => c.Price, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(c => c.Price, new { @class = "span1" })
                        @Html.ValidationMessageFor(c => c.Price)
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(c => c.PriceNet, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(c => c.PriceNet, new { @class = "span1" })
                        @Html.ValidationMessageFor(c => c.PriceNet)
                    </div>
                </div>

                <div class="control-group">
                    @Html.LabelFor(c => c.Index, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(c => c.Index, new { @class = "span1", @Value = "0" })
                        @Html.ValidationMessageFor(c => c.Index)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(c => c.Description, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextAreaFor(c => c.Description, new { @class = "span4" })
                        @Html.ValidationMessageFor(c => c.Description)
                    </div>
                </div>

                <div class="control-group">
                    <div class="controls">
                        <label class="checkbox inline">
                            <input id="Status" name="Status" type="checkbox" value="true" checked="checked"> Status
                        </label>
                    </div>
                </div>
                <div class="control-group" style="margin-top: 40px">
                    @Html.LabelFor(c => c.Content, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextAreaFor(c => c.Content, new { @class = "basic-ckeditor" })
                    </div>
                </div>

                <div class="control-group">
                    <div class="controls">
                        <h3 class="mg-h">Thêm hình ảnh cho phòng</h3>
                        <ul class="adminformlist">
                            <li class="imgthumb">
                                <label>Hình ảnh </label>
                                <input type="text" id="img-thumb" style="min-width: 190px" class="upload" />
                                <button type="button" id="add" class="btn btn-primary">Insert</button>
                                <p class="help-img">Nên chọn hình ảnh có kích thước lớn hơn 600px</p>
                            </li>
                            <li>
                                <ul style="clear: both; height: auto; width: 100%;" class="allImage" id="">
                                    @if (Model.EGalleryITems != null)
                                    {
                                        foreach (EGalleryITem gallery in Model.EGalleryITems)
                                        {
                                            <li>
                                                <input id="EGalleryITems_@(flag)__Image" name="EGalleryITems[@(flag)].Image" type="hidden" value="@(gallery.Image)" />
                                                <img src="@(gallery.Image)" width="100" />
                                            </li>
                                            flag++;
                                        }
                                    }
                                </ul>
                            </li>

                        </ul>
                    </div>
                </div>
                <div class="form-actions">
                    <input type="submit" value="Submit" class="btn btn-primary" />
                    <a href="@Url.Action("Index", "Room")" class="btn">Cancel</a>
                </div>

            }
        </div>
    </div>
</div>
<ul id='context-menu'>
    <li>Delete</li>
</ul>

<script>

    $(document).ready(function () {
        $('.js-example-basic-single').select2();
    });
</script>

<script type="text/javascript">
    function bindRightClick() {
        $('.allImage li').unbind();
        $('.allImage li').bind('contextmenu', function (e) {
            $('#context-menu').css('left', e.pageX + 'px');
            $('#context-menu').css('top', e.pageY + 'px');
            $('#context-menu').show();
            e.preventDefault();
            curentImg = $(this);
            return false;
        });
    }
    function sapxep() {
        var temp = 0;
        $(".allImage li").each(function () {
            $(this).find('input').each(function () {
                var id = $(this).attr("id");
                var name = $(this).attr("name");
                var abc = name.substring(name.indexOf('[') + 1, name.indexOf(']'));
                //console.log('name: ' + name + ' and : ' + abc);
                var idreplace = id.replace(abc, temp);
                var namereplace = name.replace(abc, temp);
                $(this).attr("id", idreplace);
                $(this).attr("name", namereplace);
            });
            temp++;
        });
        bindRightClick();
    }
    function loadHtmlForImage(val) {
        if ($('#EGalleryITems_' + val + '__Image').length > 0) {
            return loadHtmlForImage(++val);
        } else {
            //console.log(val);
            var image = '<input id="EGalleryITems_' + val + '__Image" name="EGalleryITems[' + val + '].Image" type="hidden" value="' + $('#img-thumb').val() + '"/>';
            var img = '<img src="' + $('#img-thumb').val() + '" width="100" height="80" />';
            return ('<li>' + image + img + '</li>');
        }
    }
    $(document).ready(function () {
        bindUl();
        AutoAlias("TitleRoom", "AliasRoom");
        CreateCkEditor();

        if ($("#RoomId option").length == 1) {
            $("#RoomId").closest(".control-group").hide();
        }

        bindRightClick();
        $('html').click(function (e) {
            $('#context-menu').hide();
        });
        $('#context-menu').click(function (e) {
            e.stopPropagation();
            $(curentImg).remove();
            sapxep();
            $('#context-menu').hide(100);
        });
        $(window).resize(function () {
            $('#context-menu').hide();
        });

        var count = 0;
        //Thêm ảnh
        $('#add').click(function () {
            if ($('#img').val() == "") {
                alert("Please select image");
            } else {
                var data = '';
                while (true) {
                    if ($('#EGalleryITems_0__Image').length == 0) {
                        data = loadHtmlForImage(0);
                        count = 1;
                    } else {
                        data = loadHtmlForImage(count++);
                    }
                    break;
                }
                $('.allImage').append(data);
                sapxep();
                bindRightClick();
                $('#img-title').val('');
                $('#img-thumb').val('');
                $('#img').val('');
            }

        });
    });
</script>